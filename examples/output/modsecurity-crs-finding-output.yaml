transaction:
  client_ip: 10.0.2.100
  time_stamp: Fri Oct 14 21:04:45 2022
  server_id: a84728c584aeb6bbfbc450b7543bc6348b7fdc24
  client_port: 41292
  host_ip: 10.0.2.100
  host_port: 80
  unique_id: "166578148570.017695"
  request:
    method: POST
    http_version: 1.1
    uri: /
    headers:
      Host: localhost:8080
      User-Agent: curl/7.82.0
      Accept: '*/*'
      Content-Length: "42"
      Content-Type: application/x-www-form-urlencoded
  response:
    body: "<html>\r\n<head><title>403 Forbidden</title></head>\r\n<body>\r\n<center><h1>403 Forbidden</h1></center>\r\n<hr><center>nginx/1.20.2</center>\r\n</body>\r\n</html>\r\n"
    http_code: 403
    headers:
      Server: nginx/1.20.2
      Date: Fri, 14 Oct 2022 21:04:45 GMT
      Content-Length: "153"
      Content-Type: text/html
      Connection: keep-alive
  producer:
    modsecurity: ModSecurity v3.0.8 (Linux)
    connector: ModSecurity-nginx v1.0.3
    secrules_engine: Enabled
    components:
      - OWASP_CRS/3.3.4"
  messages:
    - message: Invalid character in request (outside of very strict set)
      details:
        match: 'Matched "Operator `ValidateByteRange'' with parameter `38,44-46,48-58,61,65-90,95,97-122'' against variable `REQUEST_BODY'' (Value: `{"name": "http://test.server.com/thinger"}'' )'
        reference: o0,1o1,1o6,1o8,1o9,1o15,1o16,1o32,1o40,1o41,1v141,42t:urlDecodeUnio0,1o1,1o6,1o8,1o9,1o15,1o16,1o32,1o40,1o41,1v141,42t:urlDecodeUni
        ruleId: "920273"
        file: /etc/modsecurity.d/owasp-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
        lineNumber: "1540"
        data: 'REQUEST_BODY={"name": "http://test.server.com/thinger"}'
        severity: "2"
        ver: OWASP_CRS/3.3.4
        rev: ""
        tags:
          - modsecurity
          - application-multi
          - language-multi
          - platform-multi
          - attack-protocol
          - OWASP_CRS
          - capec/1000/210/272
          - paranoia-level/4
        maturity: "0"
        accuracy: "0"
    - message: Detects basic SQL authentication bypass attempts 2/3
      details:
        match: 'Matched "Operator `Rx'' with parameter `(?i:[\"''`]\s*?(?:(?:n(?:and|ot)|(?:x?x)?or|between|\|\||and|div|&&)\s+[\s\w]+=\s*?\w+\s*?having\s+|like(?:\s+[\s\w]+=\s*?\w+\s*?having\s+|\W*?[\"''`\d])|[^?\w\s=.,;)(]++\s*?[(@\"''`]*?\s*?\w+\W+\w|\*\s* (166 characters omitted)'' against variable `ARGS_NAMES:{"name": "http://test.server.com/thinger"}'' (Value: `{"name": "http://test.server.com/thinger"}'' )'
        reference: o6,12v141,42t:urlDecodeUni
        ruleId: "942260"
        file: /etc/modsecurity.d/owasp-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
        lineNumber: "732"
        data: 'Matched Data: ": "http://t found within ARGS_NAMES:{"name": "http://test.server.com/thinger"}: {"name": "http://test.server.com/thinger"}'
        severity: "2"
        ver: OWASP_CRS/3.3.4
        rev: ""
        tags:
          - modsecurity
          - application-multi
          - language-multi
          - platform-multi
          - attack-sqli
          - OWASP_CRS
          - capec/1000/152/248/66
          - PCI/6.5.2
          - paranoia-level/2
        maturity: "0"
        accuracy: "0"
    - message: 'Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (6)'
      details:
        match: 'Matched "Operator `Rx'' with parameter `((?:[~!@#\$%\^&\*\(\)\-\+=\{\}\[\]\|:;\"''´’‘`<>][^~!@#\$%\^&\*\(\)\-\+=\{\}\[\]\|:;\"''´’‘`<>]*?){6})'' against variable `ARGS_NAMES:{"name": "http://test.server.com/thinger"}'' (Value: `{"name": "http://test.server.com/thinger"}'' )'
        reference: o0,15o0,15v141,42t:urlDecodeUni
        ruleId: "942431"
        file: /etc/modsecurity.d/owasp-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
        lineNumber: "1395"
        data: 'Matched Data: {"name": "http: found within ARGS_NAMES:{"name": "http://test.server.com/thinger"}: {"name": "http://test.server.com/thinger"}'
        severity: "4"
        ver: OWASP_CRS/3.3.4
        rev: ""
        tags:
          - modsecurity
          - application-multi
          - language-multi
          - platform-multi
          - attack-sqli
          - OWASP_CRS
          - capec/1000/152/248/66
          - PCI/6.5.2
          - paranoia-level/3
        maturity: "0"
        accuracy: "0"
    - message: 'Restricted SQL Character Anomaly Detection (args): # of special characters exceeded (2)'
      details:
        match: 'Matched "Operator `Rx'' with parameter `((?:[~!@#\$%\^&\*\(\)\-\+=\{\}\[\]\|:;\"''´’‘`<>][^~!@#\$%\^&\*\(\)\-\+=\{\}\[\]\|:;\"''´’‘`<>]*?){2})'' against variable `ARGS_NAMES:{"name": "http://test.server.com/thinger"}'' (Value: `{"name": "http://test.server.com/thinger"}'' )'
        reference: o0,2o0,2v141,42t:urlDecodeUni
        ruleId: "942432"
        file: /etc/modsecurity.d/owasp-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
        lineNumber: "1571"
        data: 'Matched Data: {" found within ARGS_NAMES:{"name": "http://test.server.com/thinger"}: {"name": "http://test.server.com/thinger"}'
        severity: "4"
        ver: OWASP_CRS/3.3.4
        rev: ""
        tags:
          - modsecurity
          - application-multi
          - language-multi
          - platform-multi
          - attack-sqli
          - OWASP_CRS
          - capec/1000/152/248/66
          - PCI/6.5.2
          - paranoia-level/4
        maturity: "0"
        accuracy: "0"
    - message: 'Inbound Anomaly Score Exceeded (Total Score: 21)'
      details:
        match: 'Matched "Operator `Ge'' with parameter `5'' against variable `TX:ANOMALY_SCORE'' (Value: `21'' )'
        reference: ""
        ruleId: "949110"
        file: /etc/modsecurity.d/owasp-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf
        lineNumber: "81"
        data: ""
        severity: "2"
        ver: OWASP_CRS/3.3.4
        rev: ""
        tags:
          - modsecurity
          - application-multi
          - language-multi
          - platform-multi
          - attack-generic
        maturity: "0"
        accuracy: "0"
